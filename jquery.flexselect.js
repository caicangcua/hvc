var n = function () { var c = 0; var d = 1; var v = .8; var p = .9; var b = .85; var e = " \t_-"; return { t: null, i: null, s: function (t, i) { if (i.length === 0) return v; if (i.length > t.length) return c; var s = []; var e = t.toLowerCase(); i = i.toLowerCase(); this.h(t, e, i, -1, 0, [], s); if (s.length == 0) return 0; var n = 0, r = []; for (var h = 0; h < s.length; h++) { var a = s[h]; var o = 0; for (var l = 0; l < t.length; l++) { o += a[l] } if (o > n) { n = o; r = a } } n /= t.length; this.t = n; this.i = r; return n }, h: function (t, i, s, e, n, r, h) { if (n == s.length) { var a = i.charAt(0) == s.charAt(0); var o = a ? p : v; fillArray(r, o, r.length, t.length); h.push(r.slice(0)); return } var l = s.charAt(n); n++; var f = i.indexOf(l, e); if (f == -1) return; var u = e; while ((f = i.indexOf(l, e + 1)) != -1) { if (isNewWord(t, f)) { r[f - 1] = 1; fillArray(r, b, u + 1, f - 1) } else if (isUpperCase(t, f)) { fillArray(r, b, u + 1, f) } else { fillArray(r, c, u + 1, f) } r[f] = d; e = f; this.h(t, i, s, e, n, r, h) } } }; function isUpperCase(t, i) { var s = t.charAt(i); return "A" <= s && s <= "Z" } function isNewWord(t, i) { var s = t.charAt(i - 1); return e.indexOf(s) != -1 } function fillArray(t, i, s, e) { for (var n = s; n < e; n++) { t[n] = i } return t } }(); (function (r) { r.o = function (t, i) { this.init(t, i) }; r.extend(r.o.prototype, { l: { u: false, v: true, p: "score", m: "initial", k: true, A: false, S: "flexselect_selected", M: "flexselect_dropdown", g: false, B: function (t) { return t + "_flexselect" }, C: function (t) { return }, I: function (t) { return t + "_flexselect_dropdown" } }, select: null, input: null, _: null, L: null, N: [], R: [], T: null, D: null, selectedIndex: 0, H: false, O: true, j: false, F: false, init: function (t, i) { this.l = r.extend({}, this.l, i); this.select = r(t); this.U(); this.W(); this.V() }, U: function () { var t, i, s, e; var n = this.l.F; this.N = this.select.find("option").map(function () { t = r(this).text(); i = r(this).parent("optgroup").Z("label"); s = n ? [t, i].join(" ") : t; e = r(this).parent("optgroup").Z("disabled") || r(this).Z("disabled"); return { text: r.trim(s), name: r.trim(t), value: r(this).q(), disabled: e, s: 0 } }) }, W: function () { var t = this.l.k ? this.select.find("option:selected") : null, i = this; this.input = r("<input type='text' autocomplete='off' />").Z({ id: this.l.B(this.select.Z("id")), name: this.l.C(this.select.Z("name")), K: this.select.Z("accesskey"), P: this.select.Z("tabindex"), style: this.select.Z("style"), placeholder: this.select.Z("data-placeholder") }).J(this.select.Z("class")).q(r.trim(t ? t.text() : "")).G({ visibility: "visible" }); this._ = r("<div></div>").Z({ id: this.l.I(this.select.Z("id")) }).J(this.l.M); this.L = r("<ul></ul>"); this._.append(this.L); this.select.X(this.input).hide(); r("body").append(this._); r(window).Y("resize", function () { i._.hide() }) }, V: function () { var s = this; this.input.click(function () { s.T = null; s.focus() }); this.input.$(function (t) { t.preventDefault() }); this.input.focus(function () { s.D = s.input.q(); s.input[0].setSelectionRange(0, s.input.q().length); if (!s.H) s.tt() }); this.input.blur(function () { if (!s.j) { s.hide(); if (s.l.v && r.trim(r(this).q()) == "") s.it(""); else if (!s.l.u && !s.H) s.reset() } }); this.L.st(function (t) { if (!s.O) { s.O = true; return } if (t.target.tagName == "LI") { var i = s._.find("li"); s.et(i.index(r(t.target))) } }); this.L.nt(function () { s.et(-1) }); this.L.$(function (t) { s.rt(); s.ht() }); this.L.bind("touchstart", function (t) { if (t.target.tagName == "LI") { var i = s._.find("li"); s.et(i.index(r(t.target))) } }); this._.st(function (t) { s.j = true }); this._.nt(function (t) { s.j = false }); this._.at(function (t) { t.preventDefault() }); this.input.ot(function (t) { switch (t.keyCode) { case 13: t.preventDefault(); s.rt(); s.ht(); break; case 27: t.preventDefault(); s.reset(); s.ht(); break; default: s.tt(); break } }); this.input.lt(function (t) { switch (t.keyCode) { case 9: s.rt(); s.hide(); break; case 33: t.preventDefault(); s.ft(); break; case 34: t.preventDefault(); s.ut(); break; case 38: t.preventDefault(); s.ct(-1); break; case 40: t.preventDefault(); s.ct(1); break; case 13: case 27: t.preventDefault(); t.stopPropagation(); break } }); var t = this.input; this.select.dt(function () { t.q(r.trim(r(this).find("option:selected").text())) }) }, tt: function () { var t = this.l.g; var i = r.trim(this.input.q()); var s = i == "" ? this.l.m : this.l.p; if (i == this.T) return; var e = []; r.vt(this.N, function () { if (this.disabled && !t) return; this.s = n.s(this.text, i); if (this.s > 0) e.push(this) }); this.R = e; this.pt(s); this.bt(); this.ft(); this.T = i; this.H = false; this.O = false; if (this.l.A) { if (i == "") this._.hide(); else this._.show() } }, pt: function (t) { if (t == "score") { this.wt() } else if (t == "name") { this.xt() } }, wt: function () { this.R.sort(function (t, i) { return i.s - t.s }) }, xt: function () { this.R.sort(function (t, i) { return t.name < i.name ? -1 : t.name > i.name ? 1 : 0 }) }, bt: function () { var t = this.l.g; var i = this._.outerWidth() - this._.innerWidth(); var s = this.input.offset(); this._.G({ width: this.input.outerWidth() - i + "px", top: s.top + this.input.outerHeight() + "px", left: s.left + "px", maxHeight: "" }); var e = ""; var n = ""; r.vt(this.R, function () { if (this.disabled && !t) return; n = this.disabled ? ' class="disabled"' : ""; e += "<li" + n + ">" + this.name + "</li>" }); this.L.yt(e); this.kt(); this._.show() }, kt: function () { var t = r(window).height() + r(window).scrollTop() - this._.outerHeight(); var i = parseInt(this._.G("top"), 10); this._.G("max-height", i > t ? Math.max(0, t - i + this._.innerHeight()) + "px" : "") }, et: function (t) { if (t < 0 || t >= this.R.length) return; var i = this._.find("li"); i.At(this.l.S); var s = r(i[t]); if (s.St("disabled")) { this.selectedIndex = null; return } this.selectedIndex = t; s.J(this.l.S); var e = s.position().top; var n = e + s.outerHeight() - this._.height(); if (n > 0) { this.O = false; this._.scrollTop(this._.scrollTop() + n) } else if (e < 0) { this.O = false; this._.scrollTop(Math.max(0, this._.scrollTop() + e)) } }, rt: function () { var t = this.R[this.selectedIndex]; if (t && !t.disabled) { this.input.q(t.name); this.it(t.value); this.H = true } else if (this.l.u) { this.it.q("") } else { this.reset() } }, it: function (t) { if (this.select.q() === t) return; this.select.q(t).dt() }, hide: function () { this._.hide(); this.T = null }, ct: function (t) { this.et(this.selectedIndex + t) }, ft: function () { this.et(0) }, ut: function () { this.et(this.R.length - 1) }, reset: function () { this.input.q(this.D) }, focus: function () { this.input.focus() }, ht: function () { this.focus(); this.hide() } }); r.Mt.o = function (t) { this.vt(function () { if (r(this).data("flexselect")) { r(this).data("flexselect").U() } else if (this.tagName == "SELECT") { r(this).data("flexselect", new r.o(this, t)) } }); return this } })(jQuery);